#set($end = $entity.length() - 2)
#set($entity2 = $entity.substring(0, $end))
#set($entityLowFirst2 = $entity2.substring(0,1).toLowerCase() + $entity2.substring(1))
package ${package.Controller};

import java.util.ArrayList;
import java.util.List;

import cn.hutool.core.collection.CollUtil;
import com.ylxx.cloud.core.model.DeleteDTO;
import com.ylxx.cloud.core.poi.ExcelUtil;
import com.ylxx.cloud.core.system.SystemConsts;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.ylxx.cloud.core.annotation.LogAnnotation;
import com.ylxx.cloud.core.controller.BaseController;
import com.ylxx.cloud.system.log.enums.OperateTypeEnum;
import com.ylxx.cloud.system.validate.util.ValidateRequiredUtil;
import com.ylxx.cloud.core.rest.ApiResult;
import com.ylxx.cloud.core.rest.ApiResultBuilder;
import com.ylxx.cloud.core.rest.ApiVersionConsts;
import com.ylxx.cloud.core.system.SystemConsts;
import com.ylxx.cloud.core.util.HttpServletUtil;
import com.ylxx.cloud.core.validategroup.ValidateGroup;
import ${package.Entity}.${entity2}DO;
import ${package.Entity}.${entity2}DTO;
import ${package.Entity}.${entity2}VO;
import ${package.Service}.${table.serviceName};

import cn.hutool.core.date.DateUtil;
import cn.hutool.core.util.ObjectUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;

/**
 * $!{table.comment} 前端控制器
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(tags = "${table.comment}控制层")
@RequestMapping(ApiVersionConsts.V1 + "${cfg.requestPath}")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	@Resource
	private ${table.serviceName} ${entityLowFirst2}Service;
	
	@GetMapping
	@LogAnnotation(value = "分页查询", operateType = OperateTypeEnum.QUERY)
	@ApiOperation(value = "分页查询")
	public ApiResult<Page<${entity2}VO>> selectPageVo(@Validated ${entity2}DTO ${entityLowFirst2}Dto) {
		Page<${entity2}VO> result = ${entityLowFirst2}Service.selectPageVo(${entityLowFirst2}Dto);
		return ApiResultBuilder.success(result);
	}
	
	@PostMapping("/insert")
	@LogAnnotation(value = "新增记录", operateType = OperateTypeEnum.INSERT)
	@ApiOperation(value = "新增记录")
	public ApiResult insert(@RequestBody @Validated ${entity2}VO ${entityLowFirst2}Vo) {
		// 校验必填参数
		ValidateRequiredUtil.validate(ValidateGroup.Insert.class, ${entityLowFirst2}Vo);

		${entityLowFirst2}Service.insert(${entityLowFirst2}Vo);
		return ApiResultBuilder.success(${entityLowFirst2}Vo.getId()).setMessage("操作成功");
	}
	
	@PostMapping("/update")
	@LogAnnotation(value = "修改记录", operateType = OperateTypeEnum.UPDATE)
	@ApiOperation(value = "修改记录")
	public ApiResult update(@RequestBody @Validated ${entity2}VO ${entityLowFirst2}Vo) {
		// 校验必填参数
		ValidateRequiredUtil.validate(ValidateGroup.Update.class, ${entityLowFirst2}Vo);

		${entityLowFirst2}Service.update(${entityLowFirst2}Vo);
		return ApiResultBuilder.success(${entityLowFirst2}Vo.getId()).setMessage("操作成功");
	}

	@PostMapping("/delete")
	@LogAnnotation(value = "批量删除", operateType = OperateTypeEnum.DELETE)
	@ApiOperation(value = "批量删除")
	public ApiResult delete(@RequestBody @Validated DeleteDTO deleteDto) {
		${entityLowFirst2}Service.deleteBatchIds(deleteDto.getIds());
		return ApiResultBuilder.success(deleteDto.getIds()).setMessage("操作成功");
	}

	@GetMapping("/export")
	@LogAnnotation(value = "数据导出", operateType = OperateTypeEnum.EXPORT)
	@ApiOperation(value = "数据导出")
	public void export(@Validated ${entity2}DTO ${entityLowFirst2}Dto) {
		${entityLowFirst2}Dto.setCurrent(1);
    	${entityLowFirst2}Dto.setSize(SystemConsts.MAX_PAGE_SIZE);
		ApiResult<Page<${entity2}VO>> result = this.selectPageVo(${entityLowFirst2}Dto);
		List<${entity2}VO> list = CollUtil.newArrayList();
		if(ObjectUtil.isNotNull(result.getData()) && ObjectUtil.isNotEmpty(result.getData().getRecords())) {
			list = result.getData().getRecords();
		}
		ExcelUtil.export(${entity2}VO.class, list, "数据导出", HttpServletUtil.getResponse());
	}

	@GetMapping("/template")
	@LogAnnotation(value = "模板导出", operateType = OperateTypeEnum.EXPORT)
	@ApiOperation(value = "模板导出")
	public void template() {
		List<${entity2}VO> list = CollUtil.newArrayList();
		ExcelUtil.export(${entity2}VO.class, list, "模板导出", HttpServletUtil.getResponse());
	}

	@PostMapping("/import")
	@LogAnnotation(value = "数据导入", operateType = OperateTypeEnum.IMPORT)
	@ApiOperation(value = "数据导入")
	public ApiResult importData(MultipartFile file) {
		${entityLowFirst2}Service.importData(file);
		return ApiResultBuilder.success().setMessage("操作成功");
	}
	
}

#end