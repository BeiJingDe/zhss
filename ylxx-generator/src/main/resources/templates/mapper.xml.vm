#set($end = $entity.length() - 2)
#set($entity2 = $entity.substring(0, $end))
#set($entityLowFirst2 = $entity2.substring(0,1).toLowerCase() + $entity2.substring(1))
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${entityLowFirst2}Vo">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
    <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>
    
	<!-- 通用查询映射结果扩展 -->
    <resultMap id="BaseResultMapExt" extends="BaseResultMap" type="${entityLowFirst2}Vo">
    	<!-- 说明：关联其他表查询，多出来的字段映射写在此处，另外${entity2}VO也要加上对应的属性 -->
    	
    </resultMap>
    
#end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.commonFields})
        ${field.name},
#end
        ${table.fieldNames}
    </sql>
#end

	<select id="selectPageVo" resultMap="BaseResultMapExt" parameterType="${entityLowFirst2}Dto">
		select
#foreach($field in ${table.fields})
			T1.${field.name}#if($foreach.hasNext),#end
#end
		from
			${table.name} T1
		<where>
#foreach($field in ${table.fields})
			<if test="param.${field.propertyName} != null and param.${field.propertyName} != ''">AND T1.${field.name} = #{param.${field.propertyName}}</if>
#end
		</where>
	</select>

	<insert id="insertBatch" parameterType="list">
		insert into ${table.name}
		( 
#foreach($field in ${table.fields})
			${field.name}#if($foreach.hasNext),#end
#end
		) 
		values 
		<foreach collection="list" item="item" index="index" separator=",">
            (
#foreach($field in ${table.fields})
				#{item.${field.propertyName}}#if($foreach.hasNext),#end
#end
			)
        </foreach>
	</insert>

</mapper>
